import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';

const EventDetail = () => {
  const { id } = useParams();  // Access the event ID from URL params
  const [event, setEvent] = useState(null); // State to store event data
  const [loading, setLoading] = useState(true); // Loading state
  const [error, setError] = useState(null); // Error state for handling issues

  // Fetch event data when the component mounts or the ID changes
  useEffect(() => {
    const fetchEventData = async () => {
      try {
        // Replace this with an actual API call to fetch event data
        const response = await fetch(`/api/events/${id}`);
        if (!response.ok) {
          throw new Error('Event not found');
        }
        const data = await response.json();
        setEvent(data); // Set the event data in state
        setLoading(false); // Set loading to false once data is fetched
      } catch (err) {
        setError('Failed to load event details'); // Set error if API call fails
        setLoading(false);
      }
    };

    fetchEventData();
  }, [id]); // Run the effect when the ID changes

  // Loading state
  if (loading) return <div>Loading...</div>;

  // Error state
  if (error) return <div>{error}</div>;

  // If no event is found
  if (!event) return <div>Event not found</div>;

  return (
    <div className="container mx-auto p-4">
      <div className="bg-white rounded shadow-lg p-6">
        {/* Event image */}
        <img
          src={event.image}
          alt={event.title}
          className="w-full h-64 object-cover rounded mb-6"
        />

        {/* Event title and details */}
        <h1 className="text-3xl font-bold mb-4">{event.title}</h1>
        <p className="text-gray-700 mb-2">Date: {event.date}</p>
        <p className="text-gray-700 mb-2">Time: {event.time}</p>
        <p className="text-gray-700 mb-2">Location: {event.location}</p>
        <p className="text-gray-700 mb-2">Price: {event.price}</p>
        <p className="text-gray-700 mb-4">Organizer: {event.organizer}</p>
        <p className="text-gray-700 mb-6">{event.description}</p>

        {/* Buy tickets button */}
        <button className="py-2 px-4 bg-blue-500 text-white rounded hover:bg-blue-700 mb-4">
          Buy Tickets
        </button>

        {/* Map iframe */}
        <div className="w-full h-64 mb-6">
          <iframe
            src={event.mapUrl}
            className="w-full h-full border-0"
            allowFullScreen
            loading="lazy"
            referrerPolicy="no-referrer-when-downgrade"
            title="Event Location"
          />
        </div>

        {/* Social Media Share Buttons */}
        <div className="flex space-x-4">
          <a
            href={`https://www.facebook.com/sharer/sharer.php?u=${window.location.href}`}
            target="_blank"
            rel="noopener noreferrer"
            className="text-blue-500 hover:text-blue-700"
          >
            Share on Facebook
          </a>
          <a
            href={`https://twitter.com/intent/tweet?url=${window.location.href}`}
            target="_blank"
            rel="noopener noreferrer"
            className="text-blue-500 hover:text-blue-700"
          >
            Share on Twitter
          </a>
        </div>
      </div>
    </div>
  );
};

export default EventDetail;
