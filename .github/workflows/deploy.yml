name: Deploy Ukhupi App

on:
  push:
    branches:
      - main
      - backend-development

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      STAGING_SERVER: ${{ secrets.STAGING_IP }}
      PRODUCTION_SERVER: ${{ secrets.PRODUCTION_IP }}
      DEPLOY_SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
      APP_NAME: ukhupi-app
      BASE_PATH: /var/www/ukhupi-app

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Setup SSH Key
        run: |
          echo "Setting up SSH key..."
          mkdir -p ~/.ssh
          echo "${{env.DEPLOY_SSH_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Adding STAGING_SERVER to known hosts..."
          if [ -z "${{env.STAGING_SERVER}}" ]; then
            echo "Error: STAGING_SERVER is not set"
            exit 1
          fi
          ssh-keyscan -H ${{ env.STAGING_SERVER }} -p 22 >> ~/.ssh/known_hosts
          echo "Adding PRODUCTION_SERVER to known hosts..."
          if [ -z "${{ env.PRODUCTION_SERVER }}" ]; then
            echo "Error: PRODUCTION_SERVER is not set"
            exit 1
          fi
          ssh-keyscan -H ${{ env.PRODUCTION_SERVER }} -p 22 >> ~/.ssh/known_hosts
          echo "SSH key setup completed."

          - name: Deploy to Staging
          if: github.ref_name == 'backend-development'
          run: |
            echo "Starting deployment to staging..."
            ssh-agent bash -c "ssh-add ~/.ssh/id_rsa; ssh deploy@${{ env.STAGING_SERVER }} 'bash -s'" << EOF
              set -e
              echo "Deploying to staging server..."
              
              BACKEND_PATH="${BASE_PATH}/staging/backend"
              FRONTEND_PATH="${BASE_PATH}/staging/frontend"
              
              echo "Creating backend directories..."
              mkdir -p ${BACKEND_PATH}/{releases,shared} || { echo "Failed to create backend directories"; exit 1; }
        
              echo "Cloning repository..."
              cd ${BACKEND_PATH}/releases || exit 1
              RELEASE_DIR=$(date +%Y%m%d%H%M%S)
              git clone --depth 1 git@github.com:eacassecasse/ukuphi-app.git $RELEASE_DIR || { echo "Failed to clone repository"; exit 1; }
        
              echo "Updating current symlink..."
              ln -sfn $RELEASE_DIR ../current || { echo "Failed to update symlink"; exit 1; }
        
              echo "Installing backend dependencies..."
              cd ../current/backend || exit 1
              npm install || { echo "Failed to install dependencies"; exit 1; }
        
              echo "Starting or restarting PM2 application..."
              if ! pm2 reload ${APP_NAME}-backend-staging; then
                echo "Reload failed, attempting fresh start..."
                pm2 start src/index.js --name ${APP_NAME}-backend-staging || { echo "Failed to start application"; exit 1; }
              fi
        
              echo "Waiting for application to start..."
              sleep 10
        
              echo "Checking health endpoint..."
              for i in {1..5}; do
                if curl -s http://localhost:5000/health | grep -q "ok"; then
                  echo "Health check passed!"
                  break
                fi
                echo "Retrying health check ($i)..."
                sleep 5
                if [ $i -eq 5 ]; then
                  echo "Health check failed. Aborting deployment."
                  exit 1
                fi
              done
        
              echo "Deployment to staging completed successfully"
            EOF
        
            pm2 restart ${APP_NAME}-backend-staging || pm2 start src/index.js --name ${APP_NAME}-backend-staging

            # Frontend Deployment
            mkdir -p ${FRONTEND_PATH}/releases ${FRONTEND_PATH}/shared
            cd ${FRONTEND_PATH}/releases
            git clone --depth 1 git@github.com:eacassecasse/ukuphi-app.git $(date +%Y%m%d%H%M%S)
            ln -sfn $(ls -td */ | head -1) ../current
            cd ../current/frontend
            npm install
            npm run build
          EOF

      - name: Deploy to Production
        if: github.ref_name == 'main'
        run: |
          echo "Starting deployment to production..."
          ssh -i ~/.ssh/id_rsa deploy@${{ env.PRODUCTION_SERVER }} "bash -s" << EOF
            set -e
            echo "Deploying to production server..."
            # Set Paths
            BACKEND_PATH="${BASE_PATH}/production/backend"
            FRONTEND_PATH="${BASE_PATH}/production/frontend"

            # Backend Deployment
            mkdir -p ${BACKEND_PATH}/releases ${BACKEND_PATH}/shared
            cd ${BACKEND_PATH}/releases
            git clone --depth 1 git@github.com:eacassecasse/ukuphi-app.git $(date +%Y%m%d%H%M%S)
            ln -sfn $(ls -td */ | head -1) ../current
            cd ../current/backend
            npm install
            pm2 restart ${APP_NAME}-backend-production || pm2 start src/index.js --name ${APP_NAME}-backend-production

            # Frontend Deployment
            mkdir -p ${FRONTEND_PATH}/releases ${FRONTEND_PATH}/shared
            cd ${FRONTEND_PATH}/releases
            git clone --depth 1 git@github.com:eacassecasse/ukuphi-app.git $(date +%Y%m%d%H%M%S)
            ln -sfn $(ls -td */ | head -1) ../current
            cd ../current/frontend
            npm install
            npm run build
          EOF
